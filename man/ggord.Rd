% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggord.R
\name{ggord}
\alias{ggord}
\alias{ggord.MCA}
\alias{ggord.PCA}
\alias{ggord.acm}
\alias{ggord.ca}
\alias{ggord.coa}
\alias{ggord.default}
\alias{ggord.lda}
\alias{ggord.mca}
\alias{ggord.metaMDS}
\alias{ggord.pca}
\alias{ggord.prcomp}
\alias{ggord.princomp}
\alias{ggord.rda}
\title{Ordination plots with ggplot2}
\usage{
ggord(...)

\method{ggord}{default}(obs, vecs, axes = c("1", "2"), addpts = NULL,
  obslab = FALSE, ellipse = TRUE, ellipse_pro = 0.95, arrow = 0.4,
  ext = 1.2, vec_ext = 1, vec_lab = NULL, size = 4, addsize = size/2,
  addcol = "blue", addpch = 19, txt = 4, alpha = 1, xlims = NULL,
  ylims = NULL, var_sub = NULL, coord_fix = TRUE, parse = FALSE, ...)

\method{ggord}{PCA}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{MCA}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{mca}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{acm}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{prcomp}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{princomp}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{metaMDS}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{lda}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{pca}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{coa}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{ca}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)

\method{ggord}{rda}(ord_in, grp_in = NULL, axes = c("1", "2"), ...)
}
\arguments{
\item{...}{arguments passed to or from other methods}

\item{obs}{matrix or data frame of axis scores for each observation}

\item{vecs}{matrix or data frame of axis scores for each variable}

\item{axes}{chr string indicating which axes to plot}

\item{addpts}{optional matrix or data.frame of additional points if constrained ordination is used (e.g., species locations in cca, rda)}

\item{obslab}{logical if the row names for the observations in \code{obs} are plotted rather than points}

\item{ellipse}{logical if confidence ellipses are shown for each group, method from the ggbiplot package}

\item{ellipse_pro}{numeric indicating confidence value for the ellipses}

\item{arrow}{numeric indicating length of the arrow heads on the vectors, use \code{NULL} to suppress arrows}

\item{ext}{numeric indicating scalar distance of the labels from the arrow ends}

\item{vec_ext}{numeric indicating a scalar extension for the ordination vectors}

\item{vec_lab}{list of optional labels for vectors, defaults to names from input data.  The input list must be named using the existing variables in the input data.  Each element of the list will have the desired name change.}

\item{size}{numeric indicating size of the observation points}

\item{addsize}{numeric indicating size of the species points if addpts is not \code{NULL}}

\item{addcol}{numeric indicating color of the species points if addpts is not \code{NULL}}

\item{addpch}{numeric indicating point type of the species points if addpts is not \code{NULL}}

\item{txt}{numeric indicating size of the text labels for the vectors, use \code{NULL} to suppress labels}

\item{alpha}{numeric transparency of points and ellipses from 0 to 1}

\item{xlims}{two numeric values indicating x-axis limits}

\item{ylims}{two numeric values indicating y-axis limits}

\item{var_sub}{chr string indcating which labels to show.  Regular expression matching is used.}

\item{coord_fix}{logical indicating fixed, equal scaling for axes}

\item{parse}{logical indicating if optional vector labels are expressions to parse with \code{\link[ggplot2]{geom_text}}}

\item{ord_in}{input ordination object}

\item{grp_in}{vector of grouping objects for the biplot, must have the same number of observations as the original matrix used for the ordination}
}
\value{
A \code{\link[ggplot2]{ggplot}} object that can be further modified
}
\description{
Create an ordination biplot using ggplot2 including options for selecting axes, group color aesthetics, and selection of variables to plot.
}
\examples{

library(ggplot2)

# principal components analysis with the iris data set
# prcomp
ord <- prcomp(iris[, 1:4])

p <- ggord(ord, iris$Species)
p

p + scale_colour_manual('Species', values = c('purple', 'orange', 'blue'))
p + theme_classic()
p + theme(legend.position = 'top')

# change the vector labels with vec_lab
new_lab <- list(Sepal.Length = 'SL', Sepal.Width = 'SW', Petal.Width = 'PW',
 Petal.Length = 'PL')
p <- ggord(ord, iris$Species, vec_lab = new_lab)
p

# principal components analysis with the iris dataset
# princomp
ord <- princomp(iris[, 1:4])

ggord(ord, iris$Species)

# principal components analysis with the iris dataset
# PCA
library(FactoMineR)

ord <- PCA(iris[, 1:4], graph = FALSE)

ggord(ord, iris$Species)

# principal components analysis with the iris dataset
# dudi.pca
library(ade4)

ord <- dudi.pca(iris[, 1:4], scannf = FALSE, nf = 4)

ggord(ord, iris$Species)

# multiple correspondence analysis with the tea dataset
# MCA
data(tea, package = 'FactoMineR')
tea <- tea[, c('Tea', 'sugar', 'price', 'age_Q', 'sex')]

ord <- MCA(tea[, -1], graph = FALSE)

ggord(ord, tea$Tea)

# multiple correspondence analysis with the tea dataset
# mca
library(MASS)

ord <- mca(tea[, -1])

ggord(ord, tea$Tea)

# multiple correspondence analysis with the tea dataset
# acm
ord <- dudi.acm(tea[, -1], scannf = FALSE)

ggord(ord, tea$Tea)

# nonmetric multidimensional scaling with the iris dataset
# metaMDS
library(vegan)
ord <- metaMDS(iris[, 1:4])

ggord(ord, iris$Species)

# linear discriminant analysis
# example from lda in MASS package
ord <- lda(Species ~ ., iris, prior = rep(1, 3)/3)

ggord(ord, iris$Species)

# correspondence analysis
# dudi.coa
ord <- dudi.coa(iris[, 1:4], scannf = FALSE, nf = 4)

ggord(ord, iris$Species)

# correspondence analysis
# ca
library(ca)
ord <- ca(iris[, 1:4])

ggord(ord, iris$Species)

# rda triplot
data(varespec)
data(varechem)
ord <- rda(varespec, varechem)

ggord(ord)
}
\seealso{
\code{\link[ggplot2]{ggplot}}
}

